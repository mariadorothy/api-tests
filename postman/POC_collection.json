{
	"info": {
		"_postman_id": "1353d847-8112-4bde-a3c5-e9f91525e49f",
		"name": "POC",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "16871289"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the JSON response\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Store the token in environment variable\r",
							"pm.environment.set(\"bearer_token\", response.access_token);\r",
							"\r",
							"// Optionally log it\r",
							"console.log(\"Token fetched: \" + response.access_token);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{bearer_token}}"
					}
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "username",
							"value": "subbiahkk@gmail.com",
							"type": "text",
							"disabled": true
						},
						{
							"key": "password",
							"value": "Welcome@123",
							"type": "text",
							"disabled": true
						},
						{
							"key": "client_id",
							"value": "ff104445-0acf-4da3-84b7-c85c264da404",
							"type": "text"
						},
						{
							"key": "scope",
							"value": "https://verovitadev.onmicrosoft.com/fb731259-88ef-466e-92b1-0e94fa7a7c3b/read_write_from_web_app openid profile offline_access",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text"
						},
						{
							"key": "code",
							"value": "eyJraWQiOiJTSU05X29uNXpOT19sSXBlMzE3ZnBiU215eVRqcUFUVjMzejRWMkR3REQwIiwidmVyIjoiMS4wIiwiemlwIjoiRGVmbGF0ZSIsInNlciI6IjEuMCJ9.GX7cMdC9cgLlVbETUhJc22hoiRVkiw0bdurMR5nN38rZB4DDJ9H0ZYS_dO86QznMv3tUsnAs1WYD7tbra6SWU3m7g-sON8VnkYzLlh3osXWeeOnzuFdAzg8Hha63A6TtAPkNx4ay63Ny3Gv5DWR0GBFJvxTbxttFlLxDUMv4oy0qq9ysrNFx0fmfmXLtOpzE5cvh2aveV8fnazQHwsENj1g7bC9854Z1LKVAj_HCjwQQWArBOfOyYNW_K-tkXEF_LBIOS8y0TWs9o-ddBk_qHl4VmMLu4o5pzpI45OAfMy8yCj0Row1Fvxkuur57TA4qt1YkW5U7KcbREB3ANMMsEg.0RXX5hH5vUDIu27t.IR8um789Q3pDx8HG3lGsjSC1TwSBdAXdEBVwTSK1Ay7n1z1-4fP0wDIsWTrYis_2gqd_LwI9a_DXmsvwabPOpKWwXQDR0pDTOvKtLvSc5nhSE3NfPqdE4M6MWdkrorUkuwQk1cLHJYymw4Gb1fdu90_vr0TVpIndauuI0RYES90sxic1JGUpQMfKV6XfYZ9j92pnZ_pfQYgwSC6VdNa7tsG-j3z34f_XX1NR14Hc2Lz7aAt55-wR5-gvkgIhc95pkoMhsGHasgSU_xlnx33i_jJb_fAv1pwl413nTIp2s4Dtyb4I4pWowDACgpaGWtJL4vbsEPpIcEbJZ5x4R1XH-84mQkV4CukxYBo4K3VPWlqYCi41luJV0IO8XieLXTubBVrf7fkwcWxToodVnmKm_5QOH0UE_Xs7nxB1cOJ53cYotQbRxRaJOosk8UaovY7lzL_iPGPkOn-sn_Mhx_nDUQVAMENEc6QXoGALvya8-YAgaGURQSGCsjzoFRKXwlO9J9EcPKNizMhINS-DT-j55fs9H76-Eb4Sd2rp0igtVJtSEYcfIELwANquacx9ho0pwolvfNjCnh52GMdRbcAiQK4u608h5QDrsk2yXzP8uWRkvedqn0T4EuggbsmXZZ-QTcYdEdMhPTS_FdN9GuV87TvQ6UC_QQbuCCxDZLovysQHrRrYLTa20ivrReIrvXHrxBLiWRO6I8B5nZn1HYfJaLPqQI4UjetbGmH5WLMbEhrZpMvmxF9ltaRvsGRyU8lrz9iGOsiK63tOtkgvdeyog24NxHv2otnvbwzQztrEM9y1grsDTzgqXyljFfuQkIeRLO75eSnuUv2sOZqS6ZATVGKBZgbdfEdUYykZNPv30uf5VjIbAw83TcM_0e8dBSxcdJLQOgIyJWo9zsrGRrB0KbzhUNbAe5H9_vOyLgLU-qAWQdM.C-DaVl-nyL-mO6e2pxue2A",
							"type": "text"
						},
						{
							"key": "code_verifier",
							"value": "08ds1VeDrQk9ICzi6-qiU9P87k2iUk8__7p3InkViIs",
							"type": "text"
						}
					]
				},
				"url": "https://login.vitadev.vero-biotech.com/verovitadev.onmicrosoft.com/b2c_1a_signup_signin/oauth2/v2.0/token"
			},
			"response": []
		},
		{
			"name": "GetAll",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has userId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"timestamp\", new Date().toISOString());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{bearer_token}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/apps/all"
			},
			"response": []
		},
		{
			"name": "GetMyApps",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"timestamp\", new Date().toISOString());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has userId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(1);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{bearer_token}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/apps/myapps"
			},
			"response": []
		},
		{
			"name": "GetRoles",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"timestamp\", new Date().toISOString());\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response has userId\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.userId).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{bearer_token}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{base_url}}/apps/roles"
			},
			"response": []
		}
	]
}