name: ðŸ§ª Run API Tests with Newman

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: ðŸ“¥ Checkout Code
      uses: actions/checkout@v3

    - name: ðŸ›  Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: ðŸ“¦ Install Newman with HTML Reporter
      run: npm install -g newman newman-reporter-htmlextra

    - name: ðŸš€ Run Postman Collection and Save HTML Report
      run: |
        mkdir -p newman
        newman run postman/POC_collection.json \
          -e postman/Dev_environment.json \
          --reporters cli,htmlextra \
          --reporter-htmlextra-export newman/report.html
      continue-on-error: true  # âœ… Allow next steps to run even if Newman fails

    - name: ðŸ“„ Read HTML Report into variable
      id: read_report
      run: |
        REPORT=$(cat newman/report.html | base64 -w 0)
        echo "encoded_report=$REPORT" >> $GITHUB_OUTPUT

    - name: ðŸ“¤ Send Email using Azure Communication Services
      env:
        ACS_CONNECTION_STRING: ${{ secrets.ACS_CONNECTION_STRING }}
        EMAIL_SENDER: doro.luro@gmail.com
        EMAIL_RECIPIENT: mariadorothy1990@gmail.com
        REPORT_HTML: ${{ steps.read_report.outputs.encoded_report }}
      run: |
        ACS_KEY=$(echo $ACS_CONNECTION_STRING | sed -n 's/.*accesskey=\(.*\)/\1/p')
        ACS_ENDPOINT=$(echo $ACS_CONNECTION_STRING | sed -n 's/.*endpoint=\(.*\);accesskey=.*/\1/p')

        curl -X POST "$ACS_ENDPOINT/emails:send?api-version=2023-03-31" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer $ACS_KEY" \
          -d @- <<EOF
        {
          "senderAddress": "$EMAIL_SENDER",
          "recipients": {
            "to": [
              {
                "address": "$EMAIL_RECIPIENT",
                "displayName": "Test Report Recipient"
              }
            ]
          },
          "content": {
            "subject": "Newman API Test Report",
            "html": "$(echo $REPORT_HTML | base64 --decode)"
          }
        }
EOF
